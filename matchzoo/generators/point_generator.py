"""Matchzoo point generator."""

from matchzoo import engine
from matchzoo import tasks
from matchzoo.datapack import DataPack
from matchzoo import utils

import numpy as np
import typing


class PointGenerator(engine.BaseGenerator):
    """PointGenerator for Matchzoo.

    Ponit generator can be used for classification as well as ranking.

    Examples:
    """

    def __init__(
        self,
        datapack,
        batch_size: int = 32,
        shuffle: bool = True,
    ):
        """Construct the point generator.

        :param datapack: the output generated by :class:`DataPack`.
        :param batch_size: number of instances in a batch.
            `evaluate`, or `predict` expected.
        :param shuffle: whether to shuffle the instances while generating a
            batch.
        """
        self._datapack = datapack
        super().__init__(batch_size, len(datapack.relation), shuffle)

    def _get_batch_of_transformed_samples(
        self,
        indices: np.array
    ) -> typing.Tuple[dict, typing.Any]:
        """Get a batch of samples based on their ids.

        :param indices: a list of instance ids.
        :return: A batch of transformed samples.
        """
        return self._datapack[indices].unpack()
